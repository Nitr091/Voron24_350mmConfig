[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_and_brush_enabled %}
    
    {% if purge_and_brush_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES_OTHER"].z_drop_speed * 60 %}
        {% set Sc = printer["gcode_macro _USER_VARIABLES_OTHER"].brush_clean_speed * 60 %}

        {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_bucket_xyz|map('float') %}
        {% set Bx, By, Bz = printer["gcode_macro _USER_VARIABLES_OTHER"].brush_xyz|map('float') %}

        SAVE_GCODE_STATE NAME=CLEAN_NOZZLE
        # Move to purge zone (left side)
        G90
        G1 X{Px} Y{Py} Z{Bz} F{St}
        # Move to center of the brush
        G1 X{Bx} Y{By} Z{Bz} F{St}

        # Wipe procedure
        G91
        {% for wipe in range(6) %}
            G1 Y-5 F{Sc}
            G1 Y+5 F{Sc}
        {% endfor %}

        G1 X+26.25 F{Sc}
        {% for wipe in range(6) %}
            G1 X-52.5 F{Sc}
            G1 X+52.5 F{Sc}
        {% endfor %}

        G1 Z{Bz|int + 10} F{Sz}

        G90
        RESTORE_GCODE_STATE NAME=CLEAN_NOZZLE
    {% endif %}


[gcode_macro CLEAN_NOZZLE_NEW]
variable_start_x: 315 # starting position - offset a bit to the right from the brush
variable_start_y: 345 # starting Y position - offset a bit to the front of the brush
variable_start_z: 4   #starting Z height. This should barely touch the surface of the brush
variable_x_min: 269     #left side of the brush 
variable_x_max: 304     #right side of the brush
variable_y_min: 356 #front side of the brush - make sure the nozzle is over the last line of bristles 
variable_y_max: 358 #rear side of the brush - make sure the nozzle is over the first line of bristles
variable_z1: 3.2 # second z height of the nozzle over the brush - this should be with the nozzle slightly sunk in
variable_z2: 2.4 # third z height of the nozzle over the brush - this should be with the nozzle fully sunk into the brush, but not touching the bottom of it.
variable_wipe_qty: 2 #how many times to run the cleaning sequence
variable_wipe_spd: 200 #cleaning speed
variable_raise_distance: 30 # z height after cleaning is done

gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    
    G90  ; absolute positioning
    ### Move nozzle to start position
    G1 X{start_x} Y{start_y} F9000
    G1 X{x_max} Y{y_min} F9000
    G1 Z{start_z} F1500
    ### Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %} #wipe left and right
      G1 Y{y_min} F{wipe_spd * 60}
      G1 X{x_min} F{wipe_spd * 60}
      G1 X{start_x} F{wipe_spd * 60}
      
      G1 Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} F{wipe_spd * 60}
      G1 X{start_x} F{wipe_spd * 60}
      G1 Z{z1} F1500
      G1 Y{y_min} F{wipe_spd * 60}
      G1 X{x_min} F{wipe_spd * 60}
      G1 X{start_x} F{wipe_spd * 60}
      
      G1 Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} F{wipe_spd * 60}
      G1 X{start_x} F{wipe_spd * 60}
      G1 Z{z2} F1500
      G1 Y{y_min} F{wipe_spd * 60}
      G1 X{x_min} F{wipe_spd * 60}
      G1 X{start_x} F{wipe_spd * 60}
      
      G1 Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} F{wipe_spd * 60}
      G1 X{start_x} F{wipe_spd * 60}
      
      G1 Z{start_z} F1500
    {% endfor %}
    
    {% for wipes in range(1, (wipe_qty + 1)) %} #wipe diagonally
      G1 Z{start_z} F1500
      G1 X{x_min} Y{y_min} F{wipe_spd * 60}
      G1 X{x_max} Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} Y{y_min} F{wipe_spd * 60}
      G1 X{x_max} Y{y_max} F{wipe_spd * 60}
      G1 Z{z1} F1500
      G1 X{x_min} Y{y_min} F{wipe_spd * 60}
      G1 X{x_max} Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} Y{y_min} F{wipe_spd * 60}
      G1 X{x_max} Y{y_max} F{wipe_spd * 60}
     G1 Z{z1} F1500
      G1 X{x_min} Y{y_max} F{wipe_spd * 60}
      G1 X{x_max} Y{y_min} F{wipe_spd * 60}
      G1 X{x_min} Y{y_max} F{wipe_spd * 60}
      G1 X{x_max} Y{y_min} F{wipe_spd * 60}
      G1 Z{z2} F1500
      G1 X{x_min} Y{y_min} F{wipe_spd * 60}
      G1 X{x_max} Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} Y{y_min} F{wipe_spd * 60}
      G1 X{x_max} Y{y_max} F{wipe_spd * 60}
      G1 X{x_min} Y{y_max} F{wipe_spd * 60}
      G1 X{x_max} Y{y_min} F{wipe_spd * 60}
      G1 X{x_min} Y{y_max} F{wipe_spd * 60}
      G1 X{x_max} Y{y_min} F{wipe_spd * 60}
      G1 X{start_x} Y{y_min} F{wipe_spd * 60}
      
      G1 Z{start_z} F1500
    {% endfor %}
    
    G1 X{start_x} Y{start_y} F9000 #go back to starting position
    ## Raise nozzle
    G1 Z{raise_distance} 


[gcode_macro PURGE]
description: Purge a specific amount of filament ontop of the purge bucket
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_and_brush_enabled %}
    
    {% set DISTANCE = params.DISTANCE|default(10)|float %}
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}

    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES_OTHER"].z_drop_speed * 60 %}

    G90

    MOVE_TO_PURGE_BUCKET Z_DROP={Z_DROP}

    # Heat if needed and purge
    _LOW_TEMP_CHECK T={TEMP}
  
    G92 E0
    G1 E{DISTANCE|float} F150
  
    # Retract
    G92 E0
    G1 E-1.7 F2100
    G1 E-18.3 F150

    # Wait 20s to let the nozzle ooze before cleaning
    G91
    G1 Z5 F{Sz}
    G90
    G4 P{20 * 1000}
  
    G92 E0


[gcode_macro MOVE_TO_PURGE_BUCKET]
description: Move over the purge bucket
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_and_brush_enabled %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}
    
    # Move to purge zone only if it's available, else just purge where the toolhead is
    {% if purge_and_brush_enabled %}
        SAVE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
        G90
        {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}

        {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_bucket_xyz|map('float') %}
        {% if Z_DROP == 1 %}
            G1 X{Px} Y{Py} Z{Pz} F{St}
        {% else %}
            G1 X{Px} Y{Py} F{St}
        {% endif %}
        RESTORE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
    {% endif %}